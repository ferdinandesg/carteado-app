# --- Estágio 1: Builder ---
# Este estágio constrói todo o monorepo
FROM node:20-alpine AS builder

WORKDIR /app

# 1. Copia os package.json de todos os pacotes para aproveitar o cache
COPY package.json ./
COPY package-lock.json ./
COPY frontend/package.json ./frontend/
COPY backend/package.json ./backend/
COPY shared/package.json ./shared/

# 2. Instala TODAS as dependências do monorepo a partir da raiz (usando npm ci)
RUN npm ci

# 3. Copia o restante do código-fonte
COPY . .

# 4. Constrói os pacotes na ordem correta
RUN npm run build -w shared
RUN npm run build -w frontend


# --- Estágio 2: Runner (Produção) ---
# Este estágio é uma imagem limpa, apenas com o necessário para rodar o Next.js
FROM node:20-alpine

WORKDIR /app

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

# 5. Copia os arquivos de dependência da RAIZ do projeto
COPY --from=builder /app/package.json ./
COPY --from=builder /app/package-lock.json ./
COPY --from=builder /app/frontend/package.json ./frontend/
COPY --from=builder /app/shared/package.json ./shared/

# 6. Instala APENAS as dependências de PRODUÇÃO do workspace 'frontend'
RUN npm ci --omit=dev --workspace=frontend

# 7. Define o diretório de trabalho para o frontend
WORKDIR /app/frontend

# 8. Copia os artefatos de build, a pasta public e a configuração do Next.js
COPY --from=builder /app/frontend/.next ./.next
COPY --from=builder /app/frontend/public ./public
COPY --from=builder /app/frontend/next.config.js ./

EXPOSE 3000

# 9. O comando para iniciar a aplicação a partir do diretório correto
CMD ["npm", "run", "start"]