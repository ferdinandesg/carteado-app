# --- Estágio 1: Builder ---
# Este estágio tem o código-fonte completo e as dependências de desenvolvimento
FROM node:20-alpine AS builder

WORKDIR /app

# (Opcional) Instala dependências nativas se o seu projeto precisar
# RUN apk add --no-cache python3 make g++

# 1. Copia os package.json de todos os pacotes para aproveitar o cache do Docker
COPY package.json ./
COPY package-lock.json ./
COPY frontend/package.json ./frontend/
COPY backend/package.json ./backend/
COPY shared/package.json ./shared/

# 2. Instala TODAS as dependências do monorepo a partir da raiz
RUN npm install

# 3. Copia o restante do código-fonte
COPY . .

# 4. Constrói os pacotes na ordem correta, usando os workspaces
RUN npm run build -w shared
RUN npm run build -w frontend


# --- Estágio 2: Runner (Produção) ---
# Este estágio é uma imagem limpa, apenas com o necessário para rodar o Next.js
FROM node:20-alpine

WORKDIR /app

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

# 5. Copia o package.json e o lockfile do frontend
COPY --from=builder /app/frontend/package.json ./
COPY --from=builder /app/frontend/package-lock.json ./

# 6. Instale APENAS as dependências de PRODUÇÃO do frontend
RUN npm install --production

# 7. Copie os artefatos de build do Next.js e a pasta public
COPY --from=builder /app/frontend/.next ./.next
COPY --from=builder /app/frontend/public ./public

EXPOSE 3000

# 8. O comando para iniciar a aplicação agora está no diretório correto
CMD ["npm", "run", "start"]