services:
  nginx:
    image: nginx:latest
    container_name: carteado_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app_network

  frontend:
    image: ferdinandes/carteado-frontend:latest
    container_name: carteado_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=https://carteado.ferdinandes.com.br
      - NEXTAUTH_URL=https://carteado.ferdinandes.com.br
      - SOCKET_URL=http://carteado.ferdinandes.com.br/socket.io/
      - GOOGLE_ID=${GOOGLE_ID}
      - GOOGLE_SECRET=${GOOGLE_SECRET}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    restart: always
    networks:
      - app_network

  backend:
    image: ferdinandes/carteado-backend:latest
    container_name: carteado_backend
    ports:
      - "4000:4000"
    depends_on:
      - mongodb1
      - mongodb2
      - mongodb3
      - redis
    environment:
      - PORT=4000
      - DATABASE_URL=mongodb://root:rootpassword@mongodb1:27017,mongodb2:27017,mongodb3:27017/carteado?replicaSet=rs0
      - REDIS_URL=redis://redis:6379
      - FRONTEND_URL=http://carteado.ferdinandes.com.br
    restart: always
    networks:
      - app_network

  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - app_network
    command: ["redis-server", "--appendonly", "yes"]

  mongodb1:
    container_name: mongodb1
    image: mongo:6.0
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - mongo_data1:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"
    restart: always
    networks:
      - app_network

  mongodb2:
    container_name: mongodb2
    image: mongo:6.0
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - mongo_data2:/data/db
    ports:
      - "27018:27017"
    restart: always
    networks:
      - app_network

  mongodb3:
    container_name: mongodb3
    image: mongo:6.0
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - mongo_data3:/data/db
    ports:
      - "27019:27017"
    restart: always
    networks:
      - app_network

volumes:
  redis_data:
  mongo_data1:
  mongo_data2:
  mongo_data3:

networks:
  app_network:
    driver: bridge
