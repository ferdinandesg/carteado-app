# Stage 1: Builder - Instala dependências e compila o código
FROM node:20-slim AS builder
ARG APP_VERSION

ENV NEXT_PUBLIC_APP_VERSION=$APP_VERSION
WORKDIR /app

# Copia os manifestos de pacotes de todo o workspace
COPY package.json ./
COPY package-lock.json ./
COPY tsconfig*.json ./

COPY backend/package.json ./backend/
COPY shared/package.json ./shared/

# Instala TODAS as dependências do workspace (forma mais eficiente)
# Se usar npm, o comando é "npm install". Se usar pnpm, "pnpm install"
RUN npm install

# Copia o código-fonte do backend e do shared
COPY backend/ ./backend/
COPY shared/ ./shared/

# Executa o build de ambos os pacotes
# Seus scripts de build já devem lidar com isso
RUN npm run build --workspace=shared
RUN npm run build --workspace=backend

# --- Estágio 2: Runner (Produção) ---
FROM node:20-alpine

WORKDIR /app

# Copia os artefatos compilados do backend e do shared
COPY --from=builder /app/backend/dist ./backend/dist
COPY --from=builder /app/shared/dist ./shared/dist

# Copia o package.json do backend e instala APENAS as dependências de produção
COPY --from=builder /app/backend/package.json ./backend/package.json
RUN cd backend && npm install --omit=dev

# O 'shared' se torna uma dependência local, então precisamos copiá-lo
# para que o Node.js o encontre.
COPY --from=builder /app/node_modules/shared ./node_modules/shared

WORKDIR /app/backend
EXPOSE 4000
CMD ["node", "dist/index.js"]