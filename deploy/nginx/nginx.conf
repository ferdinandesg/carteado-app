# Bloco de eventos (obrigatório para o Nginx)
events {
    worker_connections 1024;
}

# Bloco HTTP principal que envolve toda a configuração
http {
    # Mantivemos sua diretiva de limite de requisições
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

    # Definição dos seus serviços para facilitar a leitura (boa prática do seu arquivo antigo)
    # Adaptado para os nomes e portas do seu docker-compose-prod.yml
    upstream frontend {
        server frontend:3000;
    }

    upstream backend {
        server backend:3333;
    }

    # Servidor principal que lida com o tráfego HTTPS na porta 443
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name carteado.ferdinandes.com.br;

        # Limite de requisições por IP
        limit_req zone=mylimit burst=20;

        # Caminhos dos certificados SSL (da sua estrutura atual)
        ssl_certificate /etc/letsencrypt/live/carteado.ferdinandes.com.br/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/carteado.ferdinandes.com.br/privkey.pem;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # Configurações de segurança SSL aprimoradas (do seu arquivo antigo)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ecdh_curve X25519:prime256v1:secp384r1;
        ssl_ciphers ECDHE-ECDSA-AES125-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;
        add_header Strict-Transport-Security "max-age=63072000" always;

        # --- Regras de Roteamento (Lógica nova e corrigida) ---

        # Regra de ALTA PRIORIDADE para a API de autenticação do NextAuth -> FRONTEND
        location ^~ /api/auth/ {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Regra GERAL para a sua API de jogo -> BACKEND
        location /api/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Regra para a conexão WebSocket -> BACKEND
        location /socket.io {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }

        # Regra PADRÃO para todas as outras requisições (páginas do site) -> FRONTEND
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Servidor secundário que redireciona todo o tráfego HTTP (porta 80) para HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name carteado.ferdinandes.com.br;

        # Rota para validação do Certbot (necessária na porta 80)
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }
}