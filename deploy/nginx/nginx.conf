# Bloco de eventos (obrigatório para o Nginx ser um arquivo completo)
events {
    worker_connections 1024;
}

# Bloco HTTP principal que envolve toda a configuração
http {
    # Diretiva de limite de requisições, agora no lugar certo
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

    # Definição dos seus serviços (upstreams), como no seu arquivo original,
    # mas com os nomes e portas corretos do seu docker-compose.yml atual.
    upstream frontend_server {
        server frontend:3000;
    }

    upstream backend_server {
        # Corrigido para a porta 3333, conforme seu docker-compose-prod.yml
        server backend:3333;
    }

    # Servidor principal HTTPS (porta 443)
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name carteado.ferdinandes.com.br;

        limit_req zone=mylimit burst=20;

        # Configurações de SSL
        ssl_certificate /etc/letsencrypt/live/carteado.ferdinandes.com.br/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/carteado.ferdinandes.com.br/privkey.pem;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;

        # --- REGRAS DE ROTEAMENTO FINAIS E CORRIGIDAS ---

        # 1. API de Autenticação do NextAuth -> vai para o FRONTEND
        # Regra de alta prioridade para garantir que não seja capturada pela API do backend.
        location ^~ /api/auth/ {
            proxy_pass http://frontend_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 2. API de Jogo (`/api/v1/...`) -> vai para o BACKEND
        # Corrigido para o caminho que sua aplicação realmente usa.
        location /api/v1/ {
            proxy_pass http://backend_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 3. WebSocket -> vai para o BACKEND
        location /carteado_socket/ {
            proxy_pass http://backend_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # 4. Todo o resto (páginas do site) -> vai para o FRONTEND
        location / {
            proxy_pass http://frontend_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Servidor de redirecionamento HTTP -> HTTPS (porta 80)
    server {
        listen 80;
        listen [::]:80;
        server_name carteado.ferdinandes.com.br;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }
}